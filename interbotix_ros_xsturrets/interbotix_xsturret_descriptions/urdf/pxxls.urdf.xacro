<?xml version="1.0"?>
<robot name="pxxls" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="robot_model"
    value="pxxls"
    scope="global"/>

  <xacro:arg name="robot_name"                default="pxxls"/>
  <xacro:arg name="base_link_frame"           default="base_link"/>
  <xacro:arg name="use_world_frame"           default="false"/>
  <xacro:arg name="external_urdf_loc"         default=""/>
  <xacro:arg name="hardware_type"             default="actual"/>

  <xacro:property name="mesh_directory"       value="package://interbotix_xsturret_descriptions/meshes/${robot_model}_meshes"/>
  <xacro:property name="urdf_loc"             value="$(arg external_urdf_loc)"/>
  <xacro:property name="hardware_type"        value="$(arg hardware_type)"/>

  <xacro:property name="pan_limit_effort"     value="3"/>
  <xacro:property name="pan_limit_lower"      value="-3.14"/>
  <xacro:property name="pan_limit_upper"      value="3.14"/>
  <xacro:property name="pan_limit_velocity"   value="${pi}"/>

  <xacro:property name="tilt_limit_effort"    value="3"/>
  <xacro:property name="tilt_limit_lower"     value="${radians(-90)}"/>
  <xacro:property name="tilt_limit_upper"     value="${radians(90)}"/>
  <xacro:property name="tilt_limit_velocity"  value="${pi}"/>

  <material name="interbotix_black">
    <texture filename="package://interbotix_xsturret_descriptions/meshes/interbotix_black.png"/>
  </material>

  <xacro:if value="$(arg use_world_frame)">
    <link name="world"/>
    <joint name="fixed" type="fixed">
      <parent
        link="world"/>
      <child
        link="$(arg robot_name)/$(arg base_link_frame)"/>
    </joint>
  </xacro:if>

  <link name="$(arg robot_name)/$(arg base_link_frame)">
    <visual>
      <origin
        rpy="0 0 ${pi/2}"
        xyz="0 0 0"/>
      <geometry>
        <mesh
          filename="${mesh_directory}/base.stl"
          scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin
        rpy="0 0 ${pi/2}"
        xyz="0 0 0"/>
      <geometry>
        <mesh
          filename="${mesh_directory}/base.stl"
          scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        rpy="0 0 0"
        xyz="-0.04867 0.000785 0.022638"/>
      <mass value="0.497151"/>
      <inertia
        ixx="0.0006443000"
        iyy="0.0027720000"
        izz="0.0027210000"
        ixy="0.0000250600"
        ixz="0.0006032000"
        iyz="-0.0000071749"/>
    </inertial>
  </link>

  <joint name="pan" type="revolute">
    <axis xyz="0 0 1"/>
    <limit
      effort="${pan_limit_effort}"
      lower="${pan_limit_lower}"
      upper="${pan_limit_upper}"
      velocity="${pan_limit_velocity}"/>
    <origin
      rpy="0 0 0"
      xyz="0 0 0.05085"/>
    <parent
      link="$(arg robot_name)/$(arg base_link_frame)"/>
    <child
      link="$(arg robot_name)/pan_link"/>
  </joint>

  <link name="$(arg robot_name)/pan_link">
    <visual>
      <origin
        rpy="0 0 ${pi/2}"
        xyz="0 0 -0.0022"/>
      <geometry>
        <mesh
          filename="${mesh_directory}/pan.stl"
          scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin
        rpy="0 0 ${pi/2}"
        xyz="0 0 -0.0022"/>
      <geometry>
        <mesh
          filename="${mesh_directory}/pan.stl"
          scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        rpy="0 0 0"
        xyz="-0.000008 0.00044 0.021079"/>
      <mass value="0.100803"/>
      <inertia
        ixx="0.0000876600"
        iyy="0.00008537000"
        izz="0.00002262000"
        ixy="0.00000000000"
        ixz="0.00000000231"
        iyz="-0.00000151051"/>
    </inertial>
  </link>

  <joint name="tilt" type="revolute">
    <axis xyz="0 1 0"/>
    <limit
      effort="${tilt_limit_effort}"
      lower="${tilt_limit_lower}"
      upper="${tilt_limit_upper}"
      velocity="${tilt_limit_velocity}"/>
    <origin
      rpy="0 0 0"
      xyz="0 0 0.04225"/>
    <parent
      link="$(arg robot_name)/pan_link"/>
    <child
      link="$(arg robot_name)/tilt_link"/>
  </joint>

  <link name="$(arg robot_name)/tilt_link">
    <visual>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <mesh
          filename="${mesh_directory}/tilt.stl"
          scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="interbotix_black"/>
    </visual>
    <collision>
      <origin
        rpy="0 0 0"
        xyz="0 0 0"/>
      <geometry>
        <mesh
          filename="${mesh_directory}/tilt.stl"
          scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
    <inertial>
      <origin
        rpy="0 0 0"
        xyz="0 0.000001 0.03035"/>
      <mass value="0.06424"/>
      <inertia
        ixx="0.0001009000"
        iyy="0.0000842600"
        izz="0.0000627400"
        ixy="0.0000000000"
        ixz="0.0000000000"
        iyz="-0.0000000027"/>
    </inertial>
  </link>

  <joint name="surface" type="fixed">
    <axis xyz="1 0 0"/>
    <origin
      rpy="0 0 0"
      xyz="0 0 0.036"/>
    <parent
      link="$(arg robot_name)/tilt_link"/>
    <child
      link="$(arg robot_name)/surface_link"/>
  </joint>

  <link name="$(arg robot_name)/surface_link">
  </link>

  <xacro:include filename="$(find interbotix_xsturret_descriptions)/urdf/control.urdf.xacro"/>
  <xacro:include filename="$(find interbotix_xsturret_descriptions)/urdf/gazebo_configs.urdf.xacro"/>

  <xacro:if value="${hardware_type == 'gz_classic'}">
    <xacro:gazebo_configs/>
  </xacro:if>

  <xacro:if value="${urdf_loc != ''}">
    <xacro:include filename="${urdf_loc}"/>
  </xacro:if>

</robot>
